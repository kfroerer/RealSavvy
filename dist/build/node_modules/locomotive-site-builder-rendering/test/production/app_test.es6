import { expect } from 'chai';
import chai from 'chai';
import chaiHttp from 'chai-http';
import nock from 'nock';
import { buildDefaultApp, loadDefaultAppData, loadDefaultApp404Data } from '../support/app';

chai.use(chaiHttp);

const API_URL = 'https://builder.example.dev';
const API_WITH_CACHE_URL = 'https://cdn.example.dev';

function _stubPlatformAPI(host, path, status, siteId, data) {
  nock(host, {
    reqheaders: { 'x-site-builder-site-id': siteId || '42' }
  })
  .get(path)
  .reply(200, Object.assign({
    status:       status || 200,
    content_type: 'text/html; charset=utf-8'
  }, data));
}

function stubPlatformAPI(path, data, status, siteId, preview) {
  var host = preview === true ? API_URL : API_WITH_CACHE_URL;
  var basePath = preview === true ? '/api/preview' : `/api/sites/${siteId}/preview`;

  _stubPlatformAPI(host, `${basePath}${path}`, status, siteId, data);
}

function stubPlatformSimpleAPI(path, data, status, siteId) {
  var basePath = `/api/sites/${siteId}/preview`;
  _stubPlatformAPI(API_WITH_CACHE_URL, `${basePath}${path}`, status, siteId, data);
}

function stubPlatformPreviewAPI(path, data, status, siteId) {
  stubPlatformAPI(path, data, status, siteId, true);
}

var app = buildDefaultApp();

describe('production/app', function() {

  describe('requesting the final domain name', function() {

    describe('GET /:path', function() {

      it('renders the index page (/)', function() {
        stubPlatformAPI('/index', loadDefaultAppData(), 200, 'myawesomesite.com');

        return chai.request(app).get('/').set('Host', 'myawesomesite.com').then(function(res) {
          expect(res).to.have.status(200);
          expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
          expect(res.text).to.include('<title>My awesome site</title>');
        });
      });

      it('renders the index page (/index)', function() {
        stubPlatformAPI('/index', loadDefaultAppData(), 200, 'myawesomesite.com');

        return chai.request(app).get('/index').set('Host', 'myawesomesite.com').then(function(res) {
          expect(res).to.have.status(200);
          expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
          expect(res.text).to.include('<title>My awesome site</title>');
        });
      });

      it('handles redirection', function(done) {
        stubPlatformAPI('/redirection', { location: '/new-page' }, 301, 'myawesomesite.com');

        chai.request(app).get('/redirection').set('Host', 'myawesomesite.com').redirects(0).end(function(err, res) {
          expect(res).to.have.status(301);
          expect(res).to.have.header('location', '/new-page');
          done();
        });
      });

      it('handles redirection to an external url', function(done) {
        stubPlatformAPI('/redirection', { location: 'https://www.nocoffee.fr', status: 302 }, 200, 'myawesomesite.com');

        chai.request(app).get('/redirection').set('Host', 'myawesomesite.com').redirects(0).end(function(err, res) {
          expect(res).to.have.status(302);
          expect(res).to.have.header('location', 'https://www.nocoffee.fr');
          done();
        });
      });

      it('displays the maintenance page if 302 redirection', function(done) {
        stubPlatformAPI('/index', { location: 'https://sitebuilder.locomotivecms.com' }, 302, 'myawesomesite.com');

        chai.request(app).get('/index').set('Host', 'myawesomesite.com').redirects(0).end(function(err, res) {
          expect(res).to.have.status(302);
          expect(res).to.have.header('location', '/maintenance.html');
          done();
        });
      });

    });

    // CUSTOM ROUTE!
    describe('Custom routes', function() {

      describe('Routes to a templatized page', function() {

        it('renders the page with local data', function() {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 'myawesomesite.com');
          stubPlatformAPI('/hello_template', loadDefaultAppData(), 200, 'myawesomesite.com');

          return chai.request(app).get('/hello/john').set('Host', 'myawesomesite.com').then(function(res) {
            expect(res).to.have.status(200);
            expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
            expect(res.text).to.include('<title>john</title>');
          });
        });

        it('renders the page with remote data', function() {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 'myawesomesite.com');
          stubPlatformAPI('/user_template', loadDefaultAppData(), 200, 'myawesomesite.com');

          return chai.request(app).get('/users/1').set('Host', 'myawesomesite.com').then(function(res) {
            expect(res).to.have.status(200);
            expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
            expect(res.text).to.include('<title>Leanne Graham</title>');
          });
        });

      });

      describe('Routes to a redirection', function() {

        it('redirects to external url', function(done) {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 'myawesomesite.com');

          chai.request(app).get('/simple-redirection').set('Host', 'myawesomesite.com').redirects(0)
          .then(Promise.reject)
          .catch(({ response }) => {
            expect(response).to.have.status(302);
            expect(response).to.have.header('location', 'https://www.nocoffee.fr');
            done();
          })
          .catch((err) => { done(err); });
        });

        it('redirects to a locale url', function(done) {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 'myawesomesite.com');

          chai.request(app).get('/local-redirection').set('Host', 'myawesomesite.com').redirects(0)
          .then(Promise.reject)
          .catch(({ response }) => {
            expect(response).to.have.status(302);
            expect(response).to.have.header('location', '/foo');
            done();
          })
          .catch((err) => { done(err); });
        });

      });

      describe('Routes rendering a body out of the SiteBuilder platform', function() {

        it('renders the body specified by the custom route', function() {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 'myawesomesite.com');

          return chai.request(app).get('/simple-render').set('Host', 'myawesomesite.com').then(function(res) {
            expect(res).to.have.status(200);
            expect(res.text).to.include('success');
          });
        });

      });

    });

  });

  describe('requesting the default domain', function() {

    describe('GET /:path', function() {

      it('displays the maintenance page', function(done) {
        chai.request(app).get('/index').set('Host', 'myapp.herokuapp.com').redirects(0).end(function(err, res) {
          expect(res).to.have.status(302);
          expect(res).to.have.header('location', '/maintenance.html');
          done();
        });
      });

    });

  });

  describe('preview mode', function() {

    describe('GET /_preview/:siteId', function() {

      it('renders the index page', function() {
        stubPlatformPreviewAPI('/index', loadDefaultAppData());

        return chai.request(app).get('/_preview/42').then(function(res) {
          expect(res).to.have.status(200);
          expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
          expect(res.text).to.include('<title>My awesome site</title>');
          expect(res.text).to.include('"https://buildercdn.example.dev/themes/slides/stylesheets/slides.css?42"');
          expect(res.text).to.include('"https://buildercdn.example.dev/themes/slides/site_builder.js?42"');
        });
      });

      it('inserts all the fonts', function() {
        stubPlatformPreviewAPI('/index', loadDefaultAppData());

        return chai.request(app).get('/_preview/42/index?load_all_fonts=1').then(function(res) {
          expect(res).to.have.status(200);
          expect(res.text).to.include('<script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js">');
          expect(res.text).to.include('families: ["Raleway", "Open Sans"');
        });
      });

      it('renders the static markup of the page', function() {
        stubPlatformPreviewAPI('/index', loadDefaultAppData());

        return chai.request(app).get('/_preview/42/index?static=1').then(function(res) {
          expect(res).to.have.status(200);
          expect(res.text).to.include('<title>My awesome site</title>');
          expect(res.text).not.to.include('<data-reactid=');
        });
      });

      context('the SiteBuilder platform is down', function() {

        it('renders the 500 error page', function() {
          nock(API_URL).get('/api/preview/index').reply(500, {});

          return chai.request(app).get('/_preview/42').then(function(res) {
            expect(res).to.have.status(200);
            expect(res).to.have.header('content-type', 'text/html; charset=UTF-8');
            expect(res.text).to.include('<h1>Something wrong happens</h1>');
          });

        });

      });

    });

    describe('GET /_preview/:siteId/redirection', function() {

      it('redirects the user to another location', function(done) {
        stubPlatformPreviewAPI('/redirection', { location: '/new-page' }, 301);

        chai.request(app).get('/_preview/42/redirection').redirects(0).end(function(err, res) {
          expect(res).to.have.status(301);
          expect(res).to.have.header('location', '/_preview/42/new-page');
          done();
        });
      });

      it('redirects the user to an external location', function(done) {
        stubPlatformPreviewAPI('/redirection', { location: 'https://www.nocoffee.fr', status: 301 }, 200);

        chai.request(app).get('/_preview/42/redirection').redirects(0).end(function(err, res) {
          expect(res).to.have.status(301);
          expect(res).to.have.header('location', 'https://www.nocoffee.fr');
          done();
        });
      });

    });

    describe('GET /_preview/:siteId/unknowpage', function() {

      it('renders the 404 error page', function(done) {
        stubPlatformPreviewAPI('/unknowpage', loadDefaultApp404Data(), 404);

        chai.request(app).get('/_preview/42/unknowpage').end(function(err, res) {
          expect(res).to.have.status(404);
          expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
          expect(res.text).to.include('<h2 class="ae-1">Page not found</h2>');
          done();
        });
      });

    });

    describe('GET /_preview/:siteId/robots.txt', function() {

      it('renders the content from the SiteBuilder API', function() {
        stubPlatformPreviewAPI('/robots.txt', { body: "User-agent: *\nDisallow:", content_type: 'text/plain; charset=UTF-8' });

        return chai.request(app).get('/_preview/42/robots.txt').then(function(res) {
          expect(res).to.have.status(200);
          expect(res).to.have.header('content-type', 'text/plain; charset=utf-8');
          expect(res.text).to.eql("User-agent: *\nDisallow:");
        });
      });

    });

    describe('GET /_preview/:siteId/sitemap.xml', function() {

      it('renders the content from the SiteBuilder API', function() {
        stubPlatformPreviewAPI('/sitemap.xml', { body: '<urlset><url><loc>/index</loc></url></urlset>', content_type: 'text/xml; charset=UTF-8' });

        return chai.request(app).get('/_preview/42/sitemap.xml').then(function(res) {
          expect(res).to.have.status(200);
          expect(res).to.have.header('content-type', 'text/xml; charset=utf-8');
          expect(res.text).to.eql("<urlset><url><loc>/index</loc></url></urlset>");
        });
      });

    });

    describe('GET /_preview/:siteId/blog/feed', function() {

      it('renders the content from the SiteBuilder API', function() {
        stubPlatformPreviewAPI('/blog/feed',{ body: '<rss version="2.0"></rss>', content_type: 'text/rss+xml; charset=UTF-8' });

        return chai.request(app).get('/_preview/42/blog/feed').then(function(res) {
          expect(res).to.have.status(200);
          expect(res).to.have.header('content-type', 'text/rss+xml; charset=utf-8');
          expect(res.text).to.eql('<rss version="2.0"></rss>');
        });
      });

    });

    describe('Custom routes', function() {

      describe('Routes to a templatized page', function() {

        it('renders the page with local data', function() {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 42);
          stubPlatformPreviewAPI('/hello_template', loadDefaultAppData());

          return chai.request(app).get('/_preview/42/hello/john').then(function(res) {
            expect(res).to.have.status(200);
            expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
            expect(res.text).to.include('<title>john</title>');
          });
        });

        it('renders the page with remote data', function() {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 42);
          stubPlatformPreviewAPI('/user_template', loadDefaultAppData());

          return chai.request(app).get('/_preview/42/users/1').then(function(res) {
            expect(res).to.have.status(200);
            expect(res).to.have.header('content-type', 'text/html; charset=utf-8');
            expect(res.text).to.include('<title>Leanne Graham</title>');
          });
        });

      });

      describe('Routes to a redirection', function() {

        it('redirects to external url', function(done) {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 42);

          chai.request(app).get('/_preview/42/simple-redirection').redirects(0)
          .then(Promise.reject)
          .catch(({ response }) => {
            expect(response).to.have.status(302);
            expect(response).to.have.header('location', 'https://www.nocoffee.fr');
            done();
          })
          .catch((err) => { done(err); });
        });

        it('redirects to a locale url', function(done) {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 42);

          chai.request(app).get('/_preview/42/local-redirection').redirects(0)
          .then(Promise.reject)
          .catch(({ response }) => {
            expect(response).to.have.status(302);
            expect(response).to.have.header('location', '/_preview/42/foo');
            done();
          })
          .catch((err) => { done(err); });
        });

      });

      describe('Routes rendering a body out of the SiteBuilder platform', function() {

        it('renders the body specified by the custom route', function() {
          stubPlatformSimpleAPI('/_show', { site: { theme_handle: 'slides' } }, 200, 42);

          return chai.request(app).get('/_preview/42/simple-render').then(function(res) {
            expect(res).to.have.status(200);
            expect(res.text).to.include('success');
          });
        });

      });

    });

  });

});
