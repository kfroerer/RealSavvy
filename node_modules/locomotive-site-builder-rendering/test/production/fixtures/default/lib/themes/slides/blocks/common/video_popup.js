'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _svg_symbol = require('./svg_symbol');

var _svg_symbol2 = _interopRequireDefault(_svg_symbol);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var VideoPopup = function (_React$Component) {
  _inherits(VideoPopup, _React$Component);

  function VideoPopup() {
    _classCallCheck(this, VideoPopup);

    return _possibleConstructorReturn(this, (VideoPopup.__proto__ || Object.getPrototypeOf(VideoPopup)).apply(this, arguments));
  }

  _createClass(VideoPopup, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'popup autoplay', 'data-popup-id': 'video-popup' },
        _react2.default.createElement(
          'div',
          { className: 'close' },
          _react2.default.createElement(_svg_symbol2.default, { symbol: 'close' })
        ),
        _react2.default.createElement(
          'div',
          { className: 'content' },
          _react2.default.createElement(
            'div',
            { className: 'container' },
            _react2.default.createElement(
              'div',
              { className: 'wrap' },
              _react2.default.createElement(
                'div',
                { className: 'fix-10-12' },
                _react2.default.createElement(
                  'div',
                  { className: 'embedVideo popupContent' },
                  _react2.default.createElement('iframe', { frameBorder: '0', allowFullScreen: true })
                )
              )
            )
          )
        )
      );
    }
  }]);

  return VideoPopup;
}(_react2.default.Component);

exports.default = VideoPopup;